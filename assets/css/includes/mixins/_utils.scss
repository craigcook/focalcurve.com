@use "sass:math";

@use "../tokens";

// Clear floats
@mixin clearfix {
    zoom: 1;

    &::after {
        clear: both;
        content: '';
        display: block;
        height: 0;
        visibility: hidden;
    }
}

// Hide an element visually, but not from screen readers
@mixin visually-hidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;

    /* !important required to ensure element is hidden when mixin is applied */
    position: absolute !important; /* stylelint-disable-line declaration-no-important */
    width: 1px;
}

// Hide an element completely, including from screen readers
@mixin hidden {
    display: none;
}

// not the most up to date method, but works in IE7
@mixin image-replaced {
    direction: ltr;
    overflow: hidden;
    text-align: left;
    text-indent: -9999px;
    white-space: nowrap;
}

// Flip an element horizontally for RTL locales such as Arabic and Hebrew.
// Usually applied to pseudo-elements with a background-image, not for text.
@mixin flip-horizontally {
    transform: scale(-1, 1);
}

// Adds a right-pointing arrow after
@mixin trailing-arrow {
    &::after {
        content: "\00A0\25B8"; // space+triangle
        white-space: nowrap;
    }
}

// Adds a left-pointing arrow before
@mixin leading-arrow {
    &::before {
        content: "\25B8\00A0"; // triangle+space
        white-space: nowrap;
        transform: rotate(180deg);
    }
}

// Preserve aspect ratio to prevent content jumping when media loads.
// Apply to a direct parent element of an image or video.
@mixin aspect-ratio($width, $height, $width-wrapper: 100%) {
    padding-bottom: math.div($height, $width) * $width-wrapper;
    position: relative;

    img,
    video,
    iframe,
    object,
    embed {
        bottom: 0;
        left: 0;
        position: absolute;
        right: 0;
        top: 0;
    }
}
